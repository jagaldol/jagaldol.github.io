{"version":3,"file":"component---src-templates-project-details-tsx-content-file-path-src-projects-toy-profile-counter-mdx-60541dfdd996e71b749c.js","mappings":"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","sources":["webpack://app/./src/projects/toy/profile-counter.mdx","webpack://app/./src/templates/project-details.tsx","webpack://app/./src/containers/project/Stacks.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport Stacks from '../../containers/project/Stacks';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    blockquote: \"blockquote\",\n    h2: \"h2\",\n    img: \"img\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"간단한 SVG 뱃지를 통해 웹사이트 방문자 수를 보여주는 self-hosted 방문자 카운터입니다.\"), \"\\n\", React.createElement(_components.p, null, \"기존에 GitHub README 등에 사용하던 \", React.createElement(_components.a, {\n    href: \"https://profile-counter.glitch.me/:yourkey:/count.svg\"\n  }, \"https://profile-counter.glitch.me/:yourkey:/count.svg\"), \" 서비스가 종료되면서, 어느 날 갑자기 조회수 이미지가 깨져버리는 경험을 했습니다.\\n이 일을 계기로 더 이상 외부 API에 의존하지 않고, 직접 방문자 수 카운터 API를 만들어 운영하기로 결심하게 되었습니다.\"), \"\\n\", React.createElement(_components.p, null, \"FastAPI와 Redis를 활용해 서버를 구성하고, 누구나 손쉽게 사용할 수 있도록 Docker Compose 기반으로 오픈소스로 배포하였습니다.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"👉 GitHub 레포지토리: \", React.createElement(_components.a, {\n    href: \"https://github.com/jagaldol/profile-counter\"\n  }, \"🔗 jagaldol/profile-counter\")), \"\\n\"), \"\\n\", React.createElement(\"div\", {\n    align: \"center\"\n  }, React.createElement(_components.h2, null, \"⏱️ Demo\"), React.createElement(_components.img, {\n    src: \"https://server.jagaldol.com/profile-counter/jagaldol-profile-counter/count.svg\",\n    alt: \"Profile Counter Demo\"\n  })), \"\\n\", React.createElement(Stacks, null, React.createElement(_components.img, {\n    src: \"https://img.shields.io/badge/fastapi-009688?style=for-the-badge&logo=fastapi&logoColor=white\",\n    alt: \"FastAPI\"\n  }), \"\\n\", React.createElement(_components.img, {\n    src: \"https://img.shields.io/badge/redis-DC382D?style=for-the-badge&logo=redis&logoColor=white\",\n    alt: \"Redis\"\n  }), \"\\n\", React.createElement(_components.img, {\n    src: \"https://img.shields.io/badge/docker-2496ED?style=for-the-badge&logo=docker&logoColor=white\",\n    alt: \"Docker\"\n  }), \"\\n\", React.createElement(_components.img, {\n    src: \"https://img.shields.io/badge/svg-FFB13B?style=for-the-badge&logo=svg&logoColor=black\",\n    alt: \"SVG\"\n  })), \"\\n\", React.createElement(_components.h2, null, \"🚀 주요 기능\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"경량 & 자체 호스팅 가능한 방문자 수 카운터\"), \"\\n\", React.createElement(_components.li, null, \"Docker만으로 간편하게 배포 및 실행\"), \"\\n\", React.createElement(_components.li, null, \"SVG 이미지 형태로 웹사이트 어디든 삽입 가능\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"⚙️ 배포 방식\"), \"\\n\", React.createElement(_components.p, null, \"FastAPI와 Redis를 기반으로 구성되어 있으며, Docker Compose로 두 컨테이너를 동시에 실행할 수 있도록 설계되어 있습니다.\\n간단한 설정만으로 로컬 혹은 개인 서버에 쉽게 배포 가능하며, 운영 환경에서는 nginx를 통한 리버스 프록시 구성도 염두에 두고 설계하였습니다.\"), \"\\n\", React.createElement(_components.h2, null, \"📄 라이선스\"), \"\\n\", React.createElement(_components.p, null, \"MIT License 하에 공개되어 있으며, 자세한 내용은 \", React.createElement(_components.a, {\n    href: \"https://github.com/jagaldol/profile-counter/blob/main/LICENSE\"\n  }, \"LICENSE\"), \" 파일을 참고해주세요.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/jagaldol.github.io/jagaldol.github.io/src/projects/toy/profile-counter.mdx\";\nimport React, {useEffect, useRef, useState} from 'react';\nimport {GatsbyImage, getImage} from 'gatsby-plugin-image';\nimport Layout from '@/components/Layout';\nimport SEO from '@/components/SEO';\nimport Badge from '@/components/Badge';\nimport ImageListContainer from '@/containers/project/ImageListContainer';\nfunction BannerLink(_ref) {\n  let {deploy_link} = _ref;\n  const {0: enableHover, 1: setEnableHover} = useState(false);\n  const {0: applyClass, 1: setApplyClass} = useState(false);\n  const {0: isTop, 1: setIsTop} = useState(false);\n  const elementRef = useRef(null);\n  const timeoutRef = useRef(null);\n  const checkIfTopReached = () => {\n    if (elementRef.current) {\n      const elementTop = elementRef.current.getBoundingClientRect().top;\n      setIsTop(elementTop <= 50);\n    }\n  };\n  useEffect(() => {\n    if (isTop) {\n      if (!applyClass) {\n        setApplyClass(true);\n        if (timeoutRef.current) {\n          clearTimeout(timeoutRef.current);\n        }\n        timeoutRef.current = setTimeout(() => {\n          setApplyClass(false);\n        }, 1000);\n      }\n    }\n  }, [isTop]);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setEnableHover(true);\n    }, 1000);\n    window.addEventListener('scroll', checkIfTopReached);\n    return () => {\n      clearTimeout(timer);\n      window.removeEventListener('scroll', checkIfTopReached);\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, []);\n  return React.createElement(\"div\", {\n    ref: elementRef,\n    className: \"absolute top-0 left-0 w-full h-full\"\n  }, React.createElement(\"a\", {\n    href: deploy_link,\n    className: `w-full h-full opacity-0 ${applyClass ? 'opacity-100' : ''} ${enableHover ? 'group-hover:opacity-100' : ''} bg-gradient-to-tl from-main-theme to-main-theme/60 z-10 transition-all duration-500 text-white flex drop-shadow-2xl`\n  }, React.createElement(\"h3\", {\n    className: \"absolute right-0 bottom-0 text-3xl max-md:text-2xl max-sm:text-lg max-sm:-translate-y-3 -translate-x-8 -translate-y-5\"\n  }, \"\\uBC14\\uB85C\\uAC00\\uAE30\")));\n}\nfunction ProjectDetails(_ref2) {\n  let {data, children} = _ref2;\n  const {title, subtitle, stack, banner, start_date, end_date, deploy_link} = data.mdx.frontmatter;\n  const bannerImage = getImage(banner);\n  const start = new Date(start_date);\n  const startDateString = `${start.getFullYear()}.${start.getMonth() + 1}.${start.getDate()}.`;\n  const end = new Date(end_date);\n  const endDateString = end_date ? `${end.getFullYear()}.${end.getMonth() + 1}.${end.getDate()}.` : '진행중';\n  const dateString = `${startDateString} ~ ${endDateString}`;\n  const imageList = data.imageList.edges.map(edge => getImage(edge.node));\n  const srcList = data.imageList.edges.map(edge => edge.node.childImageSharp.original.src);\n  return React.createElement(Layout, null, React.createElement(\"div\", {\n    className: \"mt-10 w-full flex justify-center\"\n  }, React.createElement(\"div\", {\n    className: \"w-[1300px] max-2xl:w-[1000px] max-xl:w-[1000px] max-lg:w-[700px] max-md:w-full\"\n  }, React.createElement(\"div\", {\n    className: \"mb-8\"\n  }, React.createElement(\"h1\", null, title), React.createElement(\"p\", null, subtitle), React.createElement(\"p\", {\n    className: \"text-end\"\n  }, dateString)), React.createElement(\"div\", {\n    className: \"group relative mb-2\"\n  }, bannerImage ? React.createElement(React.Fragment, null, React.createElement(GatsbyImage, {\n    alt: `${title} 대표 이미지`,\n    loading: \"eager\",\n    image: bannerImage,\n    objectFit: \"contain\"\n  }), deploy_link ? React.createElement(BannerLink, {\n    deploy_link: deploy_link\n  }) : null) : null), React.createElement(\"div\", {\n    className: \"flex gap-1 justify-end items-center flex-wrap\"\n  }, stack.map(value => React.createElement(\"div\", {\n    className: \"h-7\",\n    key: value\n  }, React.createElement(Badge, {\n    name: value\n  })))), imageList.length > 0 && React.createElement(ImageListContainer, {\n    imageList: imageList,\n    srcList: srcList\n  }), React.createElement(\"div\", {\n    className: \"markdown-body\"\n  }, children))));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(ProjectDetails, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nconst query = \"3108951361\";\nexport const Head = _ref3 => {\n  let {data} = _ref3;\n  return React.createElement(SEO, {\n    title: data.mdx.frontmatter.title,\n    description: data.mdx.frontmatter.subtitle,\n    pathname: `/projects/${data.mdx.frontmatter.slug}/`,\n    image: data.mdx.frontmatter.image.childImageSharp.original.src\n  });\n};\n","import React from 'react'\n\nexport default function Stacks({ children }: { children: React.ReactNode }) {\n  return (\n    <>\n      <h2 className=\"text-center\">🔧 사용 기술</h2>\n      <div className=\"flex w-full justify-center my-10\">\n        <div className=\"flex justify-center flex-wrap gap-x-1 gap-y-3 w-[1000px] max-lg:w-[700px] max-md:w-full\">\n          {children}\n        </div>\n      </div>\n    </>\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","a","blockquote","h2","img","ul","li","_provideComponents","components","React","href","align","src","alt","Stacks","wrapper","MDXLayout","BannerLink","_ref","deploy_link","enableHover","setEnableHover","useState","applyClass","setApplyClass","isTop","setIsTop","elementRef","useRef","timeoutRef","checkIfTopReached","current","elementTop","getBoundingClientRect","top","useEffect","clearTimeout","setTimeout","timer","window","addEventListener","removeEventListener","ref","className","ProjectDetails","_ref2","data","children","title","subtitle","stack","banner","start_date","end_date","mdx","frontmatter","bannerImage","getImage","start","Date","startDateString","getFullYear","getMonth","getDate","end","dateString","imageList","edges","map","edge","node","srcList","childImageSharp","original","Layout","GatsbyImage","loading","image","objectFit","value","key","Badge","name","length","ImageListContainer","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","Head","_ref3","SEO","description","pathname","slug"],"sourceRoot":""}