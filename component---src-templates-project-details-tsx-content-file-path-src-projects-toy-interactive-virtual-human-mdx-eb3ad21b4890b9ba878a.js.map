{"version":3,"file":"component---src-templates-project-details-tsx-content-file-path-src-projects-toy-interactive-virtual-human-mdx-eb3ad21b4890b9ba878a.js","mappings":"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","sources":["webpack://app/./src/projects/toy/interactive-virtual-human.mdx","webpack://app/./src/templates/project-details.tsx","webpack://app/./src/containers/project/ImageDetail.tsx","webpack://app/./src/containers/project/ImageListContainer.tsx","webpack://app/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    span: \"span\",\n    blockquote: \"blockquote\",\n    a: \"a\",\n    h2: \"h2\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Unity 3D engine으로 만든 대화형 가상인간입니다. 사용자의 음성을 인식하여, 명령 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">keyword</code>\"\n    }\n  }), \"가 존재하는지 분석 후 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">keyword</code>\"\n    }\n  }), \"에 따라 알맞은 대답을 합니다. TTS 음성은 네이버 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">CLOVA</code>\"\n    }\n  }), \"에서 제공하는 음성을 사용하였습니다.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"2023년 부산대학교 정보컴퓨터공학부 연구실 인턴(공학연구실습I)의 일부입니다.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://jagaldol.com/projects/lab-internship/\"\n  }, \"나머지 확인하기\")), \"\\n\"), \"\\n\", React.createElement(\"div\", {\n    align: \"center\"\n  }, React.createElement(_components.h2, null, \"🎞️ Demo\"), React.createElement(\"iframe\", {\n    width: \"560\",\n    height: \"315\",\n    src: \"https://www.youtube.com/embed/gl_M_BhP3dU?si=BIqsDZoXWH_aqM4g\",\n    title: \"YouTube video player\",\n    frameborder: \"0\",\n    allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\",\n    allowfullscreen: true\n  }), React.createElement(_components.h2, null, \"🔊 명령어\"), React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, {\n    align: \"center\"\n  }, \"keyword\"), React.createElement(_components.th, {\n    align: \"center\"\n  }, \"output\"))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"center\"\n  }, \"\\\"안녕\\\"\"), React.createElement(_components.td, {\n    align: \"center\"\n  }, \"\\\"안녕하세요.\\\"\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"center\"\n  }, \"\\\"이름\\\"\"), React.createElement(_components.td, {\n    align: \"center\"\n  }, \"\\\"제 이름은 유나입니다.\\\"\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"center\"\n  }, \"\\\"춤\\\"\"), React.createElement(_components.td, {\n    align: \"center\"\n  }, \"\\\"춤을 추겠습니다\\\" (춤을 추기 시작)\"))))));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"C:/Users/hyejun/github/jagaldol.github.io/src/projects/toy/interactive-virtual-human.mdx\";\nimport React, {useEffect, useRef, useState} from 'react';\nimport {GatsbyImage, getImage} from 'gatsby-plugin-image';\nimport Layout from '@/components/Layout';\nimport SEO from '@/components/SEO';\nimport Badge from '@/components/Badge';\nimport ImageListContainer from '@/containers/project/ImageListContainer';\nfunction BannerLink(_ref) {\n  let {deploy_link} = _ref;\n  const {0: enableHover, 1: setEnableHover} = useState(false);\n  const {0: applyClass, 1: setApplyClass} = useState(false);\n  const {0: isTop, 1: setIsTop} = useState(false);\n  const elementRef = useRef(null);\n  const timeoutRef = useRef(null);\n  const checkIfTopReached = () => {\n    if (elementRef.current) {\n      const elementTop = elementRef.current.getBoundingClientRect().top;\n      setIsTop(elementTop <= 50);\n    }\n  };\n  useEffect(() => {\n    if (isTop) {\n      if (!applyClass) {\n        setApplyClass(true);\n        if (timeoutRef.current) {\n          clearTimeout(timeoutRef.current);\n        }\n        timeoutRef.current = setTimeout(() => {\n          setApplyClass(false);\n        }, 1000);\n      }\n    }\n  }, [isTop]);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setEnableHover(true);\n    }, 1000);\n    window.addEventListener('scroll', checkIfTopReached);\n    return () => {\n      clearTimeout(timer);\n      window.removeEventListener('scroll', checkIfTopReached);\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, []);\n  return React.createElement(\"div\", {\n    ref: elementRef,\n    className: \"absolute top-0 left-0 w-full h-full\"\n  }, React.createElement(\"a\", {\n    href: deploy_link,\n    className: \"w-full h-full opacity-0 \" + (applyClass ? 'opacity-100' : '') + \" \" + (enableHover ? 'group-hover:opacity-100' : '') + \" bg-gradient-to-tl from-main-theme to-main-theme/60 z-10 transition-all duration-500 text-white flex drop-shadow-2xl\"\n  }, React.createElement(\"h3\", {\n    className: \"absolute right-0 bottom-0 text-3xl max-md:text-2xl max-sm:text-lg max-sm:-translate-y-3 -translate-x-8 -translate-y-5\"\n  }, \"\\uBC14\\uB85C\\uAC00\\uAE30\")));\n}\nfunction ProjectDetails(_ref2) {\n  let {data, children} = _ref2;\n  const {title, subtitle, stack, banner, start_date, end_date, deploy_link} = data.mdx.frontmatter;\n  const bannerImage = getImage(banner);\n  const start = new Date(start_date);\n  const end = new Date(end_date);\n  const dateString = start.getFullYear() + \".\" + (start.getMonth() + 1) + \".\" + start.getDate() + \". ~ \" + end.getFullYear() + \".\" + (end.getMonth() + 1) + \".\" + end.getDate() + \".\";\n  const imageList400 = data.imagesHeight400.edges.map(edge => getImage(edge.node));\n  const imageList200 = data.imagesHeight200.edges.map(edge => getImage(edge.node));\n  const srcList = data.imagesHeight400.edges.map(edge => edge.node.childImageSharp.original.src);\n  return React.createElement(Layout, null, React.createElement(\"div\", {\n    className: \"mt-10 w-full flex justify-center\"\n  }, React.createElement(\"div\", {\n    className: \"w-[1300px] max-2xl:w-[1000px] max-xl:w-[1000px] max-lg:w-[700px] max-md:w-full\"\n  }, React.createElement(\"div\", {\n    className: \"mb-8\"\n  }, React.createElement(\"h1\", null, title), React.createElement(\"p\", null, subtitle), React.createElement(\"p\", {\n    className: \"text-end\"\n  }, dateString)), React.createElement(\"div\", {\n    className: \"group relative mb-2\"\n  }, bannerImage ? React.createElement(React.Fragment, null, React.createElement(GatsbyImage, {\n    alt: title + \" \\uB300\\uD45C \\uC774\\uBBF8\\uC9C0\",\n    loading: \"eager\",\n    image: bannerImage,\n    objectFit: \"contain\"\n  }), deploy_link ? React.createElement(BannerLink, {\n    deploy_link: deploy_link\n  }) : null) : null), React.createElement(\"div\", {\n    className: \"flex gap-1 justify-end items-center flex-wrap\"\n  }, stack.map(value => React.createElement(\"div\", {\n    className: \"h-7\",\n    key: value\n  }, React.createElement(Badge, {\n    name: value\n  })))), imageList400.length > 0 && React.createElement(ImageListContainer, {\n    imageList400: imageList400,\n    imageList200: imageList200,\n    srcList: srcList\n  }), React.createElement(\"div\", {\n    className: \"markdown-body\"\n  }, children))));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(ProjectDetails, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nconst query = \"210642411\";\nexport const Head = _ref3 => {\n  let {data} = _ref3;\n  return React.createElement(SEO, {\n    title: data.mdx.frontmatter.title,\n    description: data.mdx.frontmatter.subtitle,\n    pathname: \"/projects/\" + data.mdx.frontmatter.slug + \"/\",\n    image: data.mdx.frontmatter.image.childImageSharp.original.src\n  });\n};\n","import React, { useEffect } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleLeft, faAngleRight, faXmark } from '@fortawesome/free-solid-svg-icons'\nimport useBodyScrollLock from '@/hooks/useBodyScrollLock'\n\nexport default function ImageDetail({\n  srcList,\n  number,\n  close,\n  toLeft,\n  toRight,\n}: {\n  srcList: string[]\n  number: number\n  close: () => void\n  toLeft: () => void\n  toRight: () => void\n}) {\n  const { lockScroll, openScroll } = useBodyScrollLock()\n\n  const handleLeftClick = () => {\n    toLeft()\n  }\n\n  // 오른쪽 클릭 처리 함수\n  const handleRightClick = () => {\n    toRight()\n  }\n\n  // Div 클릭 이벤트 핸들러\n  const handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\n    // Div의 전체 너비와 클릭 위치를 가져옵니다.\n    const target = event.target as HTMLDivElement\n    const { width } = target.getBoundingClientRect()\n    const { clientX } = event\n    const clickX = clientX - target.offsetLeft // Div 내에서의 클릭 위치\n\n    // 클릭 위치가 Div의 중간보다 왼쪽이면 왼쪽 클릭, 오른쪽이면 오른쪽 클릭으로 처리합니다.\n    if (clickX < width / 2) {\n      handleLeftClick()\n    } else {\n      handleRightClick()\n    }\n  }\n\n  useEffect(() => {\n    lockScroll()\n    return () => {\n      openScroll()\n    }\n  }, [])\n\n  return (\n    <div className=\"fixed z-[500] top-0 bottom-0 left-0 right-0 bg-black/80 flex justify-center\">\n      <div className=\"w-[1400px] flex flex-col items-center justify-center\">\n        <div className=\"flex w-full justify-end pr-10 max-md:pr-5\">\n          <button type=\"button\" aria-label=\"닫기\" onClick={close}>\n            <FontAwesomeIcon icon={faXmark} color=\"white\" size=\"3x\" />\n          </button>\n        </div>\n\n        <div className=\"px-5 h-[80%] flex items-center\" role=\"presentation\" onClick={handleClick}>\n          <img src={srcList[number]} alt={srcList[number]} className=\"max-w-full max-h-full flex-1 object-contain\" />\n        </div>\n\n        <div className=\"flex items-center\">\n          <div className=\"mx-7 max-lg:mx-4\">\n            <button\n              type=\"button\"\n              aria-label=\"왼쪽 더보기\"\n              className={`bg-white rounded-full shadow-[0_1px_2px_0_rgba(0,0,0,0.3)] h-14 w-14 max-lg:h-10 max-lg:w-10 ${number > 0 ? '' : 'invisible'}`}\n              onClick={toLeft}\n            >\n              <FontAwesomeIcon size=\"lg\" icon={faAngleLeft} />\n            </button>\n          </div>\n          <p className=\"text-white text-xl w-32 text-center\">\n            {number + 1} / {srcList.length}\n          </p>\n          <div className=\"mx-7 max-lg:mx-4\">\n            <button\n              type=\"button\"\n              aria-label=\"오른쪽 더보기\"\n              className={`bg-white rounded-full shadow-[0_1px_2px_0_rgba(0,0,0,0.3)] h-14 w-14 max-lg:h-10 max-lg:w-10 ${number < srcList.length - 1 ? '' : 'invisible'}`}\n              onClick={toRight}\n            >\n              <FontAwesomeIcon size=\"lg\" icon={faAngleRight} />\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport { GatsbyImage, IGatsbyImageData } from 'gatsby-plugin-image'\r\nimport { useBreakpoint } from 'gatsby-plugin-breakpoints'\r\nimport { faAngleLeft, faAngleRight } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport ImageDetail from '@/containers/project/ImageDetail'\r\n\r\nfunction ImageList({\r\n  imageList,\r\n  onClickImage,\r\n}: {\r\n  imageList: IGatsbyImageData[]\r\n  onClickImage: (num: number) => void\r\n}) {\r\n  const breakpoints = useBreakpoint()\r\n  const scrollRef = useRef<HTMLDivElement>(null) // 스크롤 가능한 div에 대한 참조를 생성합니다.\r\n\r\n  const [isScrolledToLeft, setIsScrolledToLeft] = useState(true)\r\n  const [isScrolledToRight, setIsScrolledToRight] = useState(false)\r\n\r\n  // 왼쪽으로 스크롤하는 함수\r\n  const scrollToLeft = () => {\r\n    if (scrollRef.current) {\r\n      scrollRef.current.scrollBy({ left: breakpoints.lg ? -350 : -800, behavior: 'smooth' }) // 여기서 -300은 스크롤할 양입니다. 필요에 따라 조절하세요.\r\n    }\r\n  }\r\n\r\n  // 오른쪽으로 스크롤하는 함수\r\n  const scrollToRight = () => {\r\n    if (scrollRef.current) {\r\n      scrollRef.current.scrollBy({ left: breakpoints.lg ? 350 : 800, behavior: 'smooth' }) // 여기서 300은 스크롤할 양입니다. 필요에 따라 조절하세요.\r\n    }\r\n  }\r\n  const checkScroll = () => {\r\n    if (scrollRef.current) {\r\n      const { scrollLeft, scrollWidth, clientWidth } = scrollRef.current\r\n      const isRight = scrollLeft + clientWidth >= scrollWidth\r\n      const isLeft = scrollLeft <= 0 // 왼쪽 끝에 도달했는지 확인\r\n      setIsScrolledToRight(isRight)\r\n      setIsScrolledToLeft(isLeft)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const scrollContainer = scrollRef.current\r\n    if (scrollContainer) {\r\n      scrollContainer.addEventListener('scroll', checkScroll)\r\n      checkScroll() // 컴포넌트 마운트 시 초기 스크롤 위치 확인\r\n    }\r\n\r\n    return () => {\r\n      if (scrollContainer) {\r\n        scrollContainer.removeEventListener('scroll', checkScroll)\r\n      }\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      {!isScrolledToLeft && (\r\n        <div className=\"absolute z-10 -left-7 max-lg:-left-4 top-0 bottom-0 flex items-center\">\r\n          <button\r\n            type=\"button\"\r\n            aria-label=\"왼쪽 더보기\"\r\n            className=\"bg-white rounded-full shadow-[0_1px_2px_0_rgba(0,0,0,0.3)] h-14 w-14 max-lg:h-10 max-lg:w-10\"\r\n            onClick={scrollToLeft}\r\n          >\r\n            <FontAwesomeIcon size=\"lg\" icon={faAngleLeft} />\r\n          </button>\r\n        </div>\r\n      )}\r\n      <div className=\"flex gap-5 overflow-x-scroll hide-scroll-bar\" ref={scrollRef}>\r\n        {imageList.map((image: IGatsbyImageData, index) => (\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => onClickImage(index)}\r\n            aria-label={`${index} 번째 이미지`}\r\n            key={image.images.fallback?.src || `image-${index}`}\r\n          >\r\n            <GatsbyImage\r\n              alt={`${index} 번째 이미지`}\r\n              image={image}\r\n              className=\"rounded-xl h-full min-w-max hover:cursor-pointer\"\r\n              objectFit=\"contain\"\r\n            />\r\n          </button>\r\n        ))}\r\n      </div>\r\n      {!isScrolledToRight && (\r\n        <div className=\"absolute z-10 -right-7 max-lg:-right-4 top-0 bottom-0 flex items-center\">\r\n          <button\r\n            type=\"button\"\r\n            aria-label=\"오른쪽 더보기\"\r\n            className=\"bg-white rounded-full shadow-[0_1px_2px_0_rgba(0,0,0,0.3)] h-14 w-14 max-lg:h-10 max-lg:w-10\"\r\n            onClick={scrollToRight}\r\n          >\r\n            <FontAwesomeIcon size=\"lg\" icon={faAngleRight} />\r\n          </button>\r\n        </div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default function ImageListContainer({\r\n  imageList400,\r\n  imageList200,\r\n  srcList,\r\n}: {\r\n  imageList400: IGatsbyImageData[]\r\n  imageList200: IGatsbyImageData[]\r\n  srcList: string[]\r\n}) {\r\n  const breakpoints = useBreakpoint()\r\n\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const [number, setNumber] = useState(0)\r\n\r\n  const onClickImage = (num: number) => {\r\n    setNumber(num)\r\n    setIsOpen(true)\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex justify-center my-10 bg-neutral-200 relative\">\r\n      {breakpoints.lg ? (\r\n        <ImageList onClickImage={onClickImage} imageList={imageList200} />\r\n      ) : (\r\n        <ImageList onClickImage={onClickImage} imageList={imageList400} />\r\n      )}\r\n\r\n      {isOpen ? (\r\n        <ImageDetail\r\n          srcList={srcList}\r\n          number={number}\r\n          close={() => setIsOpen(false)}\r\n          toLeft={() => setNumber(number - 1 < 0 ? 0 : number - 1)}\r\n          toRight={() => setNumber(number + 1 > srcList.length - 1 ? srcList.length - 1 : number + 1)}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","span","blockquote","a","h2","table","thead","tr","th","tbody","td","_provideComponents","components","React","dangerouslySetInnerHTML","__html","href","align","width","height","src","title","frameborder","allow","allowfullscreen","wrapper","MDXLayout","BannerLink","_ref","deploy_link","enableHover","setEnableHover","useState","applyClass","setApplyClass","isTop","setIsTop","elementRef","useRef","timeoutRef","checkIfTopReached","current","elementTop","getBoundingClientRect","top","useEffect","clearTimeout","setTimeout","timer","window","addEventListener","removeEventListener","ref","className","ProjectDetails","_ref2","data","children","subtitle","stack","banner","start_date","end_date","mdx","frontmatter","bannerImage","getImage","start","Date","end","dateString","getFullYear","getMonth","getDate","imageList400","imagesHeight400","edges","map","edge","node","imageList200","imagesHeight200","srcList","childImageSharp","original","Layout","GatsbyImage","alt","loading","image","objectFit","value","key","Badge","name","length","ImageListContainer","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","Head","_ref3","SEO","description","pathname","slug","ImageDetail","number","close","toLeft","toRight","lockScroll","openScroll","useBodyScrollLock","type","onClick","FontAwesomeIcon","icon","faXmark","color","size","role","event","target","clientX","offsetLeft","faAngleLeft","faAngleRight","ImageList","imageList","onClickImage","breakpoints","useBreakpoint","scrollRef","isScrolledToLeft","setIsScrolledToLeft","isScrolledToRight","setIsScrolledToRight","checkScroll","scrollLeft","scrollWidth","clientWidth","isLeft","scrollContainer","scrollToLeft","scrollBy","left","lg","behavior","index","images","fallback","_image$images$fallbac","scrollToRight","isOpen","setIsOpen","setNumber","num","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}