{"version":3,"file":"component---src-pages-index-tsx-de4d84bf9e98371ed636.js","mappings":"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","sources":["webpack://app/./src/components/ProjectLink.tsx","webpack://app/./src/containers/home/title/Title.tsx","webpack://app/./src/containers/home/Block.tsx","webpack://app/./src/containers/home/profile/ProfileContent.tsx","webpack://app/./src/containers/home/profile/Profile.tsx","webpack://app/./src/containers/home/Project.tsx","webpack://app/./src/pages/index.tsx","webpack://app/./src/svgs/bottom-arrow.inline.svg"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport Badge from '@/components/Badge'\n\nexport default function ProjectLink({ title, stacks }: { title: string; stacks: string[] }) {\n  const [applyClass, setApplyClass] = useState(false)\n  const [isVisible, setIsVisible] = useState(false)\n\n  const elementRef = useRef<HTMLDivElement | null>(null) // 요소의 참조를 저장합니다.\n  const timeoutRef = useRef<NodeJS.Timeout | null>(null) // 요소의 참조를 저장합니다.\n\n  const checkVisibility = () => {\n    if (elementRef.current) {\n      const rect = elementRef.current.getBoundingClientRect()\n      const fullyVisible = rect.top >= 0 && rect.bottom <= window.innerHeight\n\n      setIsVisible(fullyVisible)\n    }\n  }\n\n  useEffect(() => {\n    if (isVisible) {\n      if (!applyClass) {\n        setApplyClass(true)\n        if (timeoutRef.current) {\n          clearTimeout(timeoutRef.current)\n        }\n        timeoutRef.current = setTimeout(() => {\n          setApplyClass(false) // 1초 후 클래스 제거\n        }, 1000)\n      }\n    }\n  }, [isVisible])\n\n  useEffect(() => {\n    window.addEventListener('scroll', checkVisibility)\n    window.addEventListener('resize', checkVisibility)\n    checkVisibility() // 초기 로드 시에도 확인\n\n    return () => {\n      window.removeEventListener('scroll', checkVisibility)\n      window.removeEventListener('resize', checkVisibility)\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current)\n      }\n    }\n  }, [])\n\n  return (\n    <div\n      ref={elementRef}\n      className={`absolute left-0 top-0 w-full h-full opacity-0 ${applyClass ? 'opacity-100' : ''} group-hover:opacity-100 bg-gradient-to-tl from-main-theme to-main-theme/40 z-10 transition-all duration-500 text-white`}\n    >\n      <h3 className=\"absolute right-0 bottom-0 text-3xl max-md:text-2xl -translate-x-8 max-md:-translate-x-6 -translate-y-10\">\n        {title}\n      </h3>\n      <div className=\"absolute right-0 bottom-0 -translate-x-7 max-md:-translate-x-5 -translate-y-3 flex gap-1 justify-end items-center flex-wrap\">\n        {stacks.map((value: string) => (\n          <div key={value} className=\"h-6\">\n            <Badge name={value} />\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport BottomArrow from '@/svgs/bottom-arrow.inline.svg'\n\nexport default function Title() {\n  const data = useStaticQuery(graphql`\n    query Title {\n      file(relativePath: { eq: \"cloud.jpg\" }) {\n        childImageSharp {\n          gatsbyImageData(placeholder: BLURRED, width: 1000)\n        }\n      }\n    }\n  `)\n  const titleBackgroundImage = getImage(data.file)\n\n  const scrollDown = (event: React.MouseEvent<HTMLButtonElement>) => {\n    const button = event.target as HTMLButtonElement\n\n    window.scrollBy({\n      top: button.getBoundingClientRect().bottom + 40,\n      behavior: 'smooth',\n    })\n  }\n  return (\n    <>\n      <div className=\"absolute left-0 top-0 w-full h-[1000px] -z-30 bg-cover bg-center opacity-60 select-none pointer-events-none\">\n        {titleBackgroundImage ? (\n          <GatsbyImage\n            className=\"w-full h-full object-cover\"\n            loading=\"eager\"\n            alt=\"배경 구름 이미지\"\n            image={titleBackgroundImage}\n          />\n        ) : null}\n      </div>\n      <div className=\"absolute left-0 top-0 w-full h-[1000px] bg-gradient-to-b from-transparent to-bg -z-20\" />\n\n      <div className=\"h-[600px] flex flex-col text-center z-30\">\n        <div className=\"flex flex-col flex-1 items-center justify-center \">\n          <h1 className=\"text-5xl flex gap-4 max-md:gap-2 max-md:flex-col max-md:text-3xl\">\n            <span>안녕하세요</span>\n            <span>\n              <b>안혜준</b>입니다.\n            </span>\n          </h1>\n          <div className=\"my-10 flex flex-col gap-2\">\n            <p>\n              <b>무에서 유를 창조하는 개발자</b>, 안혜준입니다.\n            </p>\n            <p className=\"max-md:block flex flex-col\">\n              <span>부산대학교 정보컴퓨터공학부에서 졸업을 앞둔 채, 백엔드 개발자로 활동하고 있습니다. </span>\n              <span>웹 개발자로써 여러 프로젝트를 수행해 왔습니다. 더욱 다양한 경험을 통해 성장해나가고 싶습니다!</span>\n            </p>\n          </div>\n        </div>\n        <div className=\"flex justify-center\">\n          <button\n            type=\"button\"\n            className=\"flex flex-col justify-center items-center animate-moveUpDown\"\n            onClick={scrollDown}\n          >\n            <p>더보기</p>\n            <BottomArrow />\n          </button>\n        </div>\n      </div>\n    </>\n  )\n}\n","import React from 'react'\r\n\r\nexport default function Block({ title, children }: { title: string; children: React.ReactNode }) {\r\n  return (\r\n    <div className=\"flex flex-col my-12\">\r\n      <h2 className=\"text-center py-20 text-5xl max-md:text-3xl\">{title}</h2>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\n\nexport default function ProfileContent({ title, children }: { title: string; children: React.ReactNode }) {\n  return (\n    <div className=\"pl-[20%] max-xl:pl-[10%] max-sm:pl-0\">\n      <h3 className=\"text-3xl py-5 max-md:text-lg max-md:font-semibold\">{title}</h3>\n      <div className=\"pl-1 flex flex-col gap-2\">{children}</div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\nimport { faBlog, faCakeCandles, faUser } from '@fortawesome/free-solid-svg-icons'\nimport { faEnvelope } from '@fortawesome/free-regular-svg-icons'\nimport { IconProp } from '@fortawesome/fontawesome-svg-core'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image'\nimport Block from '@/containers/home/Block'\nimport ProfileContent from '@/containers/home/profile/ProfileContent'\n\nconst paragraphDescriptionClassName = 'text-black/60 pl-1'\n\nfunction Paragraph({\n  content,\n  description,\n  children,\n}: {\n  content: string\n  description: string\n  children?: React.ReactNode\n}) {\n  return (\n    <div>\n      <p>{content}</p>\n      <p className={paragraphDescriptionClassName}>{description}</p>\n      {children}\n    </div>\n  )\n}\n\nfunction ContactElement({ content, icon, link }: { content: string; icon: IconProp; link?: string }) {\n  return (\n    <div className=\"flex\">\n      {link ? (\n        <a href={link} className=\"flex gap-1 items-center underline-animate\">\n          <FontAwesomeIcon icon={icon} width=\"20\" />\n          <span>{content}</span>\n        </a>\n      ) : (\n        <p className=\"flex gap-1 items-center\">\n          <FontAwesomeIcon icon={icon} width=\"20\" />\n          <span>{content}</span>\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default function Profile() {\n  const data = useStaticQuery(graphql`\n    query Profile {\n      file(relativePath: { eq: \"profile.png\" }) {\n        childImageSharp {\n          gatsbyImageData(placeholder: BLURRED, width: 400)\n        }\n      }\n    }\n  `)\n\n  const profileImage = getImage(data.file)\n\n  return (\n    <Block title=\"Profile\">\n      <div className=\"grid grid-cols-2 gap-y-10 max-lg:grid-cols-1 px-10 max-md:px-0\">\n        <div className=\"flex max-sm:flex-col-reverse\">\n          <ProfileContent title=\"Contact\">\n            <ContactElement content=\"안혜준(Hyejun An)\" icon={faUser} />\n            <ContactElement content=\"2000.01.29.\" icon={faCakeCandles} />\n            <ContactElement content=\"jagaldol.dev@gmail.com\" icon={faEnvelope} link=\"mailto:jagaldol.dev@gmail.com\" />\n            <ContactElement content=\"@jagadol\" icon={faGithub} link=\"https://github.com/jagaldol/\" />\n            <ContactElement content=\"자갈돌의 devLog\" icon={faBlog} link=\"https://blog.jagaldol.com/\" />\n          </ProfileContent>\n          {profileImage ? (\n            <div className=\"flex items-center justify-center\">\n              <GatsbyImage className=\"ml-[10%] max-sm:mx-[10%] rounded-xl\" alt=\"프로필 사진\" image={profileImage} />\n            </div>\n          ) : null}\n        </div>\n\n        <ProfileContent title=\"Education\">\n          <Paragraph content=\"부산대학교 정보컴퓨터공학부\" description=\"2018.03. ~ 2024.02.\">\n            <p className={paragraphDescriptionClassName}>학점: 4.00 / 4.5</p>\n          </Paragraph>\n\n          <Paragraph content=\"카카오 테크 캠퍼스 1기\" description=\"2023.04. ~ 2023.11.\" />\n        </ProfileContent>\n\n        <ProfileContent title=\"Awards\">\n          <Paragraph content=\"카카오 테크 캠퍼스 신규 서비스 개발 프로젝트 - 대상\" description=\"2023.11.17.\" />\n          <Paragraph content=\"2023년 TOPCIT 성적우수자 - 한국정보산업연합회장상\" description=\"2023.12.22.\" />\n          <Paragraph content=\"제 1회 PNU Coding Challenge - 우수상\" description=\"2023.12.\" />\n        </ProfileContent>\n\n        <ProfileContent title=\"Certificate\">\n          <Paragraph content=\"TOPCIT - 수준 3(608점)\" description=\"Test Of Practical Competency in IT\" />\n          <Paragraph content=\"PCCP - Python level 3(700점)\" description=\"Programmers Certified Coding Professional\" />\n          <Paragraph content=\"TOEIC - 830점\" description=\"Test Of English for International Communication\" />\n        </ProfileContent>\n      </div>\n    </Block>\n  )\n}\n","import { graphql, Link, useStaticQuery } from 'gatsby'\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image'\nimport React from 'react'\nimport Block from '@/containers/home/Block'\nimport ProjectLink from '@/components/ProjectLink'\n\nexport default function Project() {\n  const data = useStaticQuery(graphql`\n    query HomeProject {\n      allMdx(\n        sort: { frontmatter: { end_date: DESC } }\n        filter: { internal: { contentFilePath: { glob: \"**/src/projects/main/*.mdx\" } } }\n      ) {\n        nodes {\n          id\n          frontmatter {\n            slug\n            title\n            stack\n            image {\n              childImageSharp {\n                gatsbyImageData(placeholder: BLURRED, width: 500)\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  const projects = data.allMdx.nodes\n\n  return (\n    <Block title=\"Project\">\n      <div className=\"grid grid-cols-3 max-lg:grid-cols-2 py-5 max-md:grid-cols-1 mx-20 max-2xl:mx-10 max-md:mx-0 gap-x-3 gap-y-10\">\n        {projects.map((project: any) => {\n          const image = getImage(project.frontmatter.image)\n          return (\n            <Link\n              key={project.id}\n              to={`/projects/${project.frontmatter.slug}`}\n              className=\"relative w-full h-full bg-gradient-to-bl to-gray-300 from-gray-100 drop-shadow-lg flex items-center justify-center max-h-96 group\"\n            >\n              {image ? (\n                <GatsbyImage\n                  alt={`${project.frontmatter.title} 대표 이미지`}\n                  loading=\"eager\"\n                  image={image}\n                  className=\"h-full group-hover:scale-90 transition-all duration-500\"\n                  objectFit=\"contain\"\n                />\n              ) : null}\n              <ProjectLink title={project.frontmatter.title} stacks={project.frontmatter.stack} />\n            </Link>\n          )\n        })}\n      </div>\n\n      <Link\n        to=\"/projects\"\n        className={`\n        flex justify-center items-center rounded-full\n        text-lg max-md:text-base\n        h-14 max-2xl:h-12 max-md:h-10 \n        mx-20 my-10 max-2xl:mx-10 max-md:mx-0\n        drop-shadow text-white bg-main-theme hover:bg-main-theme/70 transition-all\n        `}\n      >\n        View More\n      </Link>\n    </Block>\n  )\n}\n","import type { HeadFC, PageProps } from 'gatsby'\nimport React from 'react'\nimport Title from '@/containers/home/title/Title'\nimport Profile from '@/containers/home/profile/Profile'\nimport Layout from '@/components/Layout'\nimport Project from '@/containers/home/Project'\n\nconst IndexPage: React.FC<PageProps> = () => {\n  return (\n    <Layout>\n      <Title />\n      <Profile />\n      <Project />\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\nexport const Head: HeadFC = () => <title>Backend Developer | Hyejun An</title>\n","var React = require('react');\n\nfunction BottomArrowInline (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"path\",{\"d\":\"M14.9242 18.305L7.85323 25.376L0.782227 18.306\",\"stroke\":\"black\",\"strokeWidth\":\"1.5\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M7.85352 25.376L7.99451 1.47601\",\"stroke\":\"black\",\"strokeWidth\":\"1.5\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"key\":1})]);\n}\n\nBottomArrowInline.defaultProps = {\"width\":\"16\",\"height\":\"27\",\"viewBox\":\"0 0 16 27\",\"fill\":\"none\"};\n\nmodule.exports = BottomArrowInline;\n\nBottomArrowInline.default = BottomArrowInline;\n"],"names":["ProjectLink","title","stacks","applyClass","setApplyClass","useState","isVisible","setIsVisible","elementRef","useRef","timeoutRef","checkVisibility","current","rect","getBoundingClientRect","fullyVisible","top","bottom","window","innerHeight","useEffect","clearTimeout","setTimeout","addEventListener","removeEventListener","React","ref","className","map","value","key","Badge","name","Title","data","useStaticQuery","titleBackgroundImage","getImage","file","GatsbyImage","loading","alt","image","type","onClick","event","button","target","scrollBy","behavior","BottomArrow","Block","children","ProfileContent","paragraphDescriptionClassName","Paragraph","content","description","ContactElement","icon","link","href","FontAwesomeIcon","width","Profile","profileImage","faUser","faCakeCandles","faEnvelope","faGithub","faBlog","Project","projects","allMdx","nodes","project","frontmatter","Link","id","to","slug","objectFit","stack","IndexPage","Layout","Head","BottomArrowInline","props","createElement","defaultProps","module","exports","default"],"sourceRoot":""}